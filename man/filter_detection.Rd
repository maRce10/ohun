% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_detection.R
\name{filter_detection}
\alias{filter_detection}
\title{Remove ambiguous detections}
\usage{
filter_detection(detection, by = "scores", filter = "max", parallel = 1, pb = TRUE)
}
\arguments{
\item{detection}{Data frame with the output of \code{\link{label_detection}} containing the start and end of the signals. Must contained at least the following columns: "sound.files", "selec", "start", "end". It must also contained the column indicated in the 'by' argument.}

\item{by}{Character vector of length 1 indicating a column in 'detection' that will be used to filter delections. Must refer to a numeric column. Default is 'scores' , which is return by \code{\link{template_detector}}.}

\item{filter}{Character vector of length 1 indicating the criterium used to filter the column refer to by the 'by' argument. Current options are 'max' (maximum) and 'min' (minimum). Default is 'max'.}

\item{parallel}{Numeric. Controls whether parallel computing is applied.
It specifies the number of cores to be used. Default is 1 (i.e. no parallel computing).}

\item{pb}{Logical argument to control progress bar. Default is \code{TRUE}.}
}
\value{
An object of class 'envelopes'.
}
\description{
\code{filter_detection} removes ambiguous detections (split and merged detections)
}
\details{
This function removes ambiguous detections (split or merged detections, see \code{\link{diagnose_detection}}) keeping only the one that maximizes a criterium given by 'filter'. By default it keeps the detection with the highest correlation score on template-based detections. It works on the output of \code{\link{label_detection}}.
}
\examples{
{
# load example data
data(list = "Phae.long1")

# save sound files
writeWave(Phae.long1, file.path(tempdir(), "Phae.long1.wav"))

# template for the first sound file in 'lbh_selec_reference'
templ1 <- lbh_selec_reference[1, ]

# generate template correlations
tc <- template_correlator(templates = templ1, path = tempdir(),
files = "Phae.long1.wav")

# template detection
td <- template_detector(template.correlations = tc, threshold = 0.12)

# this detection generates 2 split positives
diagnose_detection(reference = lbh_selec_reference[lbh_selec_reference == "Phae.long1.wav", ],
detection = td)

# label detection
ltd <- label_detection(reference = lbh_selec_reference[lbh_selec_reference == "Phae.long1.wav", ],
detection = td)

# now they can be filter to keep the detection with the highest score for each split
ftd <- filter_detection(ltd)

# splits must be 0
diagnose_detection(reference = lbh_selec_reference[lbh_selec_reference == "Phae.long1.wav", ],
detection = ftd)
}

}
\references{
{
#' Araya-Salas, M. (2021), ohun: automatic detection of acoustic signals. R package version 0.1.0.
}
}
\seealso{
\code{\link{label_detection}}
}
\author{
Marcelo Araya-Salas (\email{marcelo.araya@ucr.ac.cr}).
}
